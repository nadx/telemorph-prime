version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: telemorph-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - telemorph-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: telemorph-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - telemorph-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: telemorph-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - telemorph-network

  # Create Kafka topics
  kafka-topics:
    image: confluentinc/cp-kafka:7.5.0
    container_name: telemorph-kafka-topics
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        kafka-topics --create --if-not-exists --topic otel.traces --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
        kafka-topics --create --if-not-exists --topic otel.metrics --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
        kafka-topics --create --if-not-exists --topic otel.logs --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
        kafka-topics --list --bootstrap-server kafka:29092
      "
    networks:
      - telemorph-network


  # Ingestion service (built from local Dockerfile)
  ingestion-service:
    build:
      context: ./ingestion-service
      dockerfile: Dockerfile
    container_name: telemorph-ingestion
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "4317:4317"  # gRPC OTLP
      - "4318:4318"  # HTTP OTLP
      - "8080:8080"  # Health checks
    environment:
      KAFKA_BROKERS: kafka:29092
    networks:
      - telemorph-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:

networks:
  telemorph-network:
    driver: bridge
